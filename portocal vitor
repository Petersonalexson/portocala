Option Explicit

Sub PopulateForecastTables()
    ' This macro populates tables in the Forecast sheet based on data from SPECIFIC SHEET
    ' It aggregates amounts by unique Cost Center and Description 2 combinations
    ' and places them in the appropriate period column in the Forecast sheet
    
    Dim specificSheet As Worksheet
    Dim accountMappingSheet As Worksheet
    Dim refMappingSheet As Worksheet
    Dim forecastSheet As Worksheet
    Dim instructionsSheet As Worksheet
    Dim i As Long, j As Long, k As Long
    Dim ccPositions As Variant
    Dim specificSheetName As String
    Dim periodValue As String
    Dim periodHeaderCol As Long
    
    ' For processing data
    Dim dataDict As Object
    Dim dictKey As String
    Dim natAccount As String, cc As String, desc2 As String
    Dim amount As Double
    Dim ccFound As Boolean
    
    ' Initialize dictionary for data aggregation
    Set dataDict = CreateObject("Scripting.Dictionary")
    
    ' Initialize the CC positions in the Forecast sheet
    ccPositions = Array(6, 22, 38, 54, 70)
    
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    Application.Calculation = xlCalculationManual
    
    ' Get the imported sheet name from Instructions D7
    Set instructionsSheet = ThisWorkbook.Sheets("Instructions")
    
    If instructionsSheet Is Nothing Then
        MsgBox "Could not find the 'Instructions' sheet in this workbook.", vbExclamation
        GoTo CleanupAndExit
    End If
    
    specificSheetName = instructionsSheet.Range("D7").Value
    
    If specificSheetName = "" Then
        MsgBox "Missing sheet name in Instructions cell D7.", vbExclamation
        GoTo CleanupAndExit
    End If
    
    ' Find required sheets
    On Error Resume Next
    Set specificSheet = ThisWorkbook.Sheets(specificSheetName)
    Set accountMappingSheet = ThisWorkbook.Sheets("Account Mapping")
    Set refMappingSheet = ThisWorkbook.Sheets("Reference mapping")
    Set forecastSheet = ThisWorkbook.Sheets("Forecast")
    On Error GoTo 0
    
    ' Verify all required sheets exist
    If specificSheet Is Nothing Then
        MsgBox "Could not find sheet '" & specificSheetName & "' in this workbook.", vbExclamation
        GoTo CleanupAndExit
    End If
    
    If accountMappingSheet Is Nothing Then
        MsgBox "Could not find the 'Account Mapping' sheet in this workbook.", vbExclamation
        GoTo CleanupAndExit
    End If
    
    If refMappingSheet Is Nothing Then
        MsgBox "Could not find the 'Reference mapping' sheet in this workbook.", vbExclamation
        GoTo CleanupAndExit
    End If
    
    If forecastSheet Is Nothing Then
        MsgBox "Could not find the 'Forecast' sheet in this workbook.", vbExclamation
        GoTo CleanupAndExit
    End If
    
    ' Get period from A1 in SPECIFIC SHEET
    periodValue = specificSheet.Range("A1").Value
    
    If periodValue = "" Then
        MsgBox "Missing period value in " & specificSheetName & " (A1).", vbExclamation
        GoTo CleanupAndExit
    End If
    
    ' Find the transformation in reference mapping (B16 -> C16)
    Dim refB16 As String, refC16 As String
    refB16 = refMappingSheet.Range("B16").Value
    refC16 = refMappingSheet.Range("C16").Value
    
    If refB16 = "" Or refC16 = "" Then
        MsgBox "Missing mapping in Reference mapping (B16, C16).", vbExclamation
        GoTo CleanupAndExit
    End If
    
    ' Set the transformed period in F2 (as per your process description)
    specificSheet.Range("F2").Value = periodValue
    
    ' Get the period header column in Forecast sheet (C2)
    periodHeaderCol = 3 ' C column
    
    ' Set the period header in Forecast sheet
    forecastSheet.Cells(2, periodHeaderCol).Value = periodValue
    
    ' Process each row of SPECIFIC SHEET to aggregate data
    Dim lastRow As Long
    lastRow = specificSheet.Cells(specificSheet.Rows.Count, "A").End(xlUp).Row
    
    ' First pass: Aggregate amounts by Cost Center and Description 2
    For i = 2 To lastRow ' Starting from row 2 assuming row 1 has headers
        ' Get values from SPECIFIC SHEET
        natAccount = specificSheet.Cells(i, 3).Value ' Nat Accounts in column C
        cc = specificSheet.Cells(i, 5).Value ' CC in column E
        
        ' Check if the amount cell has a value
        If Not IsEmpty(specificSheet.Cells(i, 15)) Then
            amount = specificSheet.Cells(i, 15).Value ' Amounts in column O
        Else
            amount = 0 ' Default to 0 if empty
        End If
        
        ' Skip if any essential value is missing
        If Len(Trim(natAccount)) = 0 Or Len(Trim(cc)) = 0 Then
            GoTo NextDataRow
        End If
        
        ' Find the Description 2 in Account Mapping for this Nat Account
        desc2 = ""
        Dim mappingLastRow As Long
        mappingLastRow = accountMappingSheet.Cells(accountMappingSheet.Rows.Count, "B").End(xlUp).Row
        
        For j = 2 To mappingLastRow ' Assuming row 1 has headers
            If accountMappingSheet.Cells(j, 2).Value = natAccount Then ' Column B has Account numbers
                desc2 = accountMappingSheet.Cells(j, 4).Value ' Column D has Description 2
                Exit For
            End If
        Next j
        
        If Len(Trim(desc2)) = 0 Then
            ' If no mapping found, skip this row
            GoTo NextDataRow
        End If
        
        ' Create a unique key for this CC and Description 2 combination
        dictKey = cc & "|" & desc2
        
        ' Add to or update dictionary
        If dataDict.Exists(dictKey) Then
            dataDict(dictKey) = dataDict(dictKey) + amount
        Else
            dataDict.Add dictKey, amount
        End If
        
NextDataRow:
    Next i
    
    ' Clear previous values in the period column of the Forecast table
    For i = 0 To UBound(ccPositions)
        If i < UBound(ccPositions) Then
            ' Clear from the current CC position to the next one minus headers
            forecastSheet.Range(forecastSheet.Cells(ccPositions(i) + 1, periodHeaderCol), _
                              forecastSheet.Cells(ccPositions(i + 1) - 2, periodHeaderCol)).ClearContents
        Else
            ' For the last CC, clear a reasonable number of rows
            forecastSheet.Range(forecastSheet.Cells(ccPositions(i) + 1, periodHeaderCol), _
                              forecastSheet.Cells(ccPositions(i) + 15, periodHeaderCol)).ClearContents
        End If
    Next i
    
    ' Second pass: Populate the Forecast sheet with aggregated data
    Dim dictKeys As Variant
    Dim parts As Variant
    Dim currentCC As String
    Dim currentDesc2 As String
    
    dictKeys = dataDict.Keys
    
    For i = 0 To dataDict.Count - 1
        ' Split the dictionary key back into CC and Description 2
        parts = Split(dictKeys(i), "|")
        currentCC = parts(0)
        currentDesc2 = parts(1)
        amount = dataDict(dictKeys(i))
        
        ' Find which CC position to use in the Forecast sheet
        ccFound = False
        
        For j = 0 To UBound(ccPositions)
            If forecastSheet.Cells(ccPositions(j), 3).Value = currentCC Then
                ccFound = True
                
                ' Now find where to put the value for this desc2
                For k = ccPositions(j) + 1 To ccPositions(j) + 15 ' Check rows below the CC header
                    If forecastSheet.Cells(k, 3).Value = currentDesc2 Then
                        ' Found the right row for this desc2, place the amount in the period column
                        forecastSheet.Cells(k, periodHeaderCol).Value = amount
                        Exit For
                    End If
                Next k
                
                Exit For
            End If
        Next j
    Next i
    
    ' Activate the Forecast sheet to show results
    forecastSheet.Activate
    
    ' Final message
    MsgBox "Tables in the Forecast sheet have been populated with data from " & specificSheetName & ".", vbInformation
    
CleanupAndExit:
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    Application.Calculation = xlCalculationAutomatic
End Sub
