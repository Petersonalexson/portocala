Sub ImportSpecificSheetFromSharePoint()
    ' This macro reads a SharePoint URL from cell D7,
    ' imports "SPECIFIC SHEET" as text to preserve formatting and trailing zeros,
    ' and renames the sheet based on the value in cell D10
    
    Dim sourceUrl As String
    Dim newSheetName As String
    Dim wb As Workbook
    Dim ws As Worksheet
    
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    
    ' Get the URL from cell D7
    sourceUrl = ThisWorkbook.Sheets(1).Range("D7").Value
    
    ' Get the new sheet name from cell D10
    newSheetName = ThisWorkbook.Sheets(1).Range("D10").Value
    
    ' Validate inputs
    If Len(sourceUrl) = 0 Then
        MsgBox "Please enter a SharePoint URL in cell D7!", vbExclamation
        Exit Sub
    End If
    
    If Len(newSheetName) = 0 Then
        MsgBox "Please enter a sheet name in cell D10!", vbExclamation
        Exit Sub
    End If
    
    ' Method 1: Try using workbooks.Open first (more direct)
    On Error Resume Next
    Set wb = Workbooks.Open(sourceUrl, ReadOnly:=True)
    
    If Not wb Is Nothing Then
        ' We successfully opened the workbook
        On Error Resume Next
        Set ws = wb.Sheets("SPECIFIC SHEET")
        
        If Not ws Is Nothing Then
            ' Copy the specific sheet to our workbook
            ws.Copy After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count)
            ' Rename the newly copied sheet
            ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count).Name = newSheetName
            ' Convert all cells to text format to preserve trailing zeros
            With ThisWorkbook.Sheets(newSheetName).UsedRange
                .NumberFormat = "@" ' Set to text format
            End With
            ' Close the source workbook
            wb.Close SaveChanges:=False
            
            MsgBox "Sheet 'SPECIFIC SHEET' successfully imported and renamed to '" & newSheetName & "'", vbInformation
        Else
            wb.Close SaveChanges:=False
            MsgBox "Could not find 'SPECIFIC SHEET' in the source workbook.", vbExclamation
        End If
    Else
        ' Method 2: If direct open failed, try to use QueryTables (Power Query approach)
        On Error GoTo ErrorHandler
        ' Add a new worksheet
        Set ws = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
        ws.Name = newSheetName
        
        ' Create a QueryTable to get data
        With ws.QueryTables.Add(Connection:="URL;" & sourceUrl, Destination:=ws.Range("A1"))
            .WebSelectionType = xlSpecifiedTables
            .WebTables = "SPECIFIC SHEET$"  ' Target the specific sheet
            .WebFormatting = xlWebFormattingAll
            .WebDisableDateRecognition = True
            .WebPreFormattedTextToColumns = True
            .Refresh BackgroundQuery:=False
            .Delete  ' Remove the query but keep the data
        End With
        
        ' Convert all cells to text format to preserve trailing zeros
        ws.UsedRange.NumberFormat = "@"
        
        MsgBox "Data imported from 'SPECIFIC SHEET' and saved to sheet '" & newSheetName & "'", vbInformation
    End If
    
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    Exit Sub
    
ErrorHandler:
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    MsgBox "Error importing data: " & Err.Description, vbCritical
End Sub
